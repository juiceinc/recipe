site_name: "My Documentation"

# This tells pydocmd which pages to generate from which Python modules,
# functions and classes. At the first level is the page name, below that
# is a tree of Python member names (modules, classes, etc.) that should be
# documented. Higher indentation leads to smaller header size.
generate:
- recipe.md:
    - recipe.Recipe++     # (+ to include members)
    - recipe.Shelf++
    - recipe.BadIngredient++
    - recipe.BadRecipe++
- ingredients.md: 
    - recipe.Dimension
    - recipe.Metric
    - recipe.Filter
    - recipe.Having
- extensions.md:
    - recipe.Anonymize++
    - recipe.AutomaticFilters++
    - recipe.BlendRecipe++
    - recipe.RecipeExtension++
    - recipe.SummarizeOver++

pages:
- Home: index.md 

# These options all show off their default values. You don't have to add
# them to your configuration if you're fine with the default.
docs_dir: sources
gens_dir: ../gitbook-recipe/api     # This will end up as the MkDocs 'docs_dir'
site_dir: _build/site
theme:    readthedocs
loader:   pydocmd.loader.PythonLoader
preprocessor: pydocmd.preprocessor.Preprocessor

# Whether to output headers as markdown or HTML.  Used to workaround
# https://github.com/NiklasRosenstein/pydoc-markdown/issues/11.  The default is
# to generate HTML with unique and meaningful id tags, which can't be done with
# markdown.
#
# Note: if using the simple generator mode, this will default to 'markdown'
# instead of 'html'.
headers: html
